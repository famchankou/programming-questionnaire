{"version":3,"sources":["../../src/controllers/questionnaire.controller.js"],"names":["QuestionnaireController","create","req","res","status","json","update","delete","get","questionnaire","models","Questionnaire","findByPk","params","questId","error","message","getAll","questionaries","findAll"],"mappings":";;;;;;;AAAA;;;;AAEA;;;AAGe,MAAMA,uBAAN,CAA8B;AAC3C,eAAaC,MAAb,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;;AAED,eAAaC,MAAb,CAAoBJ,GAApB,EAAyBC,GAAzB,EAA8B;AAC5BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;;AAED,eAAaE,MAAb,CAAoBL,GAApB,EAAyBC,GAAzB,EAA8B;AAC5BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;AAED;;;;;;;;AAMA,eAAaG,GAAb,CAAiBN,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,QAAI;AACF,YAAMM,aAAa,GAAG,MAAMC,kBAAOC,aAAP,CAAqBC,QAArB,CAA+B,GAAEV,GAAG,CAACW,MAAJ,CAAWC,OAAQ,EAApD,CAA5B;AAEAX,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,aAArB;AACD,KAJD,CAIE,OAAOM,KAAP,EAAc;AACdZ,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBW,QAAAA,OAAO,EAAG,GAAED,KAAK,CAACC,OAAQ;AADP,OAArB;AAGD;AACF;AAED;;;;;;;;AAMA,eAAaC,MAAb,CAAoBf,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,QAAI;AACF,YAAMe,aAAa,GAAG,MAAMR,kBAAOC,aAAP,CAAqBQ,OAArB,EAA5B;AAEAhB,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,aAArB;AACD,KAJD,CAIE,OAAOH,KAAP,EAAc;AACdZ,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBW,QAAAA,OAAO,EAAG,GAAED,KAAK,CAACC,OAAQ;AADP,OAArB;AAGD;AACF;;AA/C0C","sourcesContent":["import models from '../db-models';\r\n\r\n/**\r\n * Questionnaire CRUD operations controller\r\n */\r\nexport default class QuestionnaireController {\r\n  static async create(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async update(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async delete(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  /**\r\n   * Get specific Questionnaire by ID\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async get(req, res) {\r\n    try {\r\n      const questionnaire = await models.Questionnaire.findByPk(`${req.params.questId}`);\r\n\r\n      res.status(200).json(questionnaire);\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all Questionnaires\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async getAll(req, res) {\r\n    try {\r\n      const questionaries = await models.Questionnaire.findAll();\r\n\r\n      res.status(200).json(questionaries);\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"file":"questionnaire.controller.js"}