{"version":3,"sources":["../../src/controllers/answer.controller.js"],"names":["AnswerController","create","req","res","status","json","update","delete","get","getAll","questionId","params","answers","models","Answer","findAll","where","error","send","message"],"mappings":";;;;;;;AAAA;;;;AAEA;;;AAGe,MAAMA,gBAAN,CAAuB;AACpC,eAAaC,MAAb,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;;AAED,eAAaC,MAAb,CAAoBJ,GAApB,EAAyBC,GAAzB,EAA8B;AAC5BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;;AAED,eAAaE,MAAb,CAAoBL,GAApB,EAAyBC,GAAzB,EAA8B;AAC5BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;;AAED,eAAaG,GAAb,CAAiBN,GAAjB,EAAsBC,GAAtB,EAA2B;AACzBA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACD;AAED;;;;;;;;AAMA,eAAaI,MAAb,CAAoBP,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,UAAMO,UAAU,GAAGR,GAAG,CAACS,MAAJ,CAAWD,UAA9B;;AAEA,QAAI;AACF,YAAME,OAAO,GAAG,MAAMC,kBAAOC,MAAP,CAAcC,OAAd,CAAsB;AAC1CC,QAAAA,KAAK,EAAE;AACLN,UAAAA,UAAU,EAAEA;AADP;AADmC,OAAtB,CAAtB;AAMAP,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,OAArB;AACD,KARD,CAQE,OAAOK,KAAP,EAAc;AACdd,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAG,GAAEF,KAAK,CAACE,OAAQ;AADP,OAArB;AAGD;AACF;;AAvCmC","sourcesContent":["import models from '../db-models';\r\n\r\n/**\r\n * Answer CRUD operations controller\r\n */\r\nexport default class AnswerController {\r\n  static async create(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async update(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async delete(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async get(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  /**\r\n   * Get all Answers for the specified Question ID\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async getAll(req, res) {\r\n    const questionId = req.params.questionId;\r\n    \r\n    try {\r\n      const answers = await models.Answer.findAll({\r\n        where: {\r\n          questionId: questionId\r\n        }\r\n      });\r\n\r\n      res.status(200).json(answers);\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"file":"answer.controller.js"}