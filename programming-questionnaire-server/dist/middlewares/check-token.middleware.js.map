{"version":3,"sources":["../../src/middlewares/check-token.middleware.js"],"names":["checkToken","req","res","next","token","headers","authorization","replace","status","send","auth","message","JWT","verify","config","secret","err","decoded","json"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;AAQA,MAAMA,UAAU,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrC,MAAIC,KAAK,GAAG,CAACH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,IAA6B,EAA9B,EAAkCC,OAAlC,CAA0C,SAA1C,EAAqD,EAArD,CAAZ;;AAEA,MAAI,CAACH,KAAL,EAAY;AACVF,IAAAA,GAAG,CACAM,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAFR;AAGD,GAJD,MAIO;AACLC,0BAAIC,MAAJ,CAAWT,KAAX,EAAkBU,gBAAOC,MAAzB,EAAiC,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACjD,UAAID,GAAJ,EAAS;AACPd,QAAAA,GAAG,CACAM,MADH,CACU,GADV,EAEGU,IAFH,CAEQ;AAAER,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,OAAO,EAAE;AAAxB,SAFR;AAGD,OAJD,MAIO;AACLR,QAAAA,IAAI;AACL;AACF,KARD;AASD;AACF,CAlBD;;eAoBeH,U","sourcesContent":["import JWT from 'jsonwebtoken';\r\nimport config from '../config';\r\n\r\n/**\r\n * Checks specified JWT to authenticate a user via Bearer\r\n * Default token lifetime 86400\r\n * \r\n * @param {Object} req \r\n * @param {Object} res \r\n * @param {Function} next \r\n */\r\nconst checkToken = (req, res, next) => {\r\n  let token = (req.headers.authorization || '').replace('Bearer ', '');\r\n\r\n  if (!token) {\r\n    res\r\n      .status(401)\r\n      .send({ auth: false, message: 'No token provided' });\r\n  } else {\r\n    JWT.verify(token, config.secret, (err, decoded) => {\r\n      if (err) {\r\n        res\r\n          .status(404)\r\n          .json({ auth: false, message: 'Failed to authenticate' });\r\n      } else {\r\n        next();\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default checkToken;"],"file":"check-token.middleware.js"}