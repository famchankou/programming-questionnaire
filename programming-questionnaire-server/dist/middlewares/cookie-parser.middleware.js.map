{"version":3,"sources":["../../src/middlewares/cookie-parser.middleware.js"],"names":["parseCookie","req","res","next","cookies","headers","cookie","parsedCookies","length","split","forEach","parts","shift","trim","decodeURI","join"],"mappings":";;;;;;;AAAA;;;;;;;AAOA,MAAMA,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtC,MAAIC,OAAO,GAAGH,GAAG,CAACI,OAAJ,CAAYC,MAA1B;AACA,MAAIC,aAAa,GAAG,EAApB;;AAEA,MAAIH,OAAO,IAAIA,OAAO,CAACI,MAAvB,EAA+B;AAC7BJ,IAAAA,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmBC,OAAnB,CAA2BJ,MAAM,IAAI;AACnC,UAAIK,KAAK,GAAGL,MAAM,CAACG,KAAP,CAAa,GAAb,CAAZ;AACAF,MAAAA,aAAa,CAACI,KAAK,CAACC,KAAN,GAAcC,IAAd,EAAD,CAAb,GAAsCC,SAAS,CAACH,KAAK,CAACI,IAAN,CAAW,GAAX,CAAD,CAA/C;AACD,KAHD;AAID;;AAEDd,EAAAA,GAAG,CAACM,aAAJ,GAAoBA,aAApB;AACAJ,EAAAA,IAAI;AACL,CAbD;;eAeeH,W","sourcesContent":["/**\r\n * Parses cookies and assigns the values to the request body\r\n * \r\n * @param {Object} req \r\n * @param {Object} res \r\n * @param {Function} next \r\n */\r\nconst parseCookie = (req, res, next) => {\r\n  let cookies = req.headers.cookie;\r\n  let parsedCookies = {};\r\n\r\n  if (cookies && cookies.length) {\r\n    cookies.split(';').forEach(cookie => {\r\n      let parts = cookie.split('=');\r\n      parsedCookies[parts.shift().trim()] = decodeURI(parts.join('='));\r\n    });\r\n  }\r\n\r\n  req.parsedCookies = parsedCookies;\r\n  next();\r\n};\r\n\r\nexport default parseCookie;\r\n"],"file":"cookie-parser.middleware.js"}