{"version":3,"sources":["../../src/db-models/question.js"],"names":["question","sequelize","DataTypes","Question","define","id","allowNull","primaryKey","type","Sequelize","UUID","defaultValue","title","STRING","description","TEXT","field","questionnaireId","onDelete","references","model","key","as","associate","models","belongsTo","Questionnaire","foreignKey","hasMany","Answer"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;AAQA,MAAMA,QAAQ,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,QAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,UAAU,EAAE,IAFV;AAGFC,MAAAA,IAAI,EAAEC,mBAAUC,IAHd;AAIFC,MAAAA,YAAY,EAAE,MAAM;AAJlB,KADwC;AAO5CC,IAAAA,KAAK,EAAE;AACLJ,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADX;AAELC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFlB;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILV,MAAAA,SAAS,EAAE;AAJN,KAPqC;AAa5CN,IAAAA,QAAQ,EAAE;AACRQ,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADR;AAERC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFf;AAGRC,MAAAA,KAAK,EAAE,UAHC;AAIRV,MAAAA,SAAS,EAAE;AAJH,KAbkC;AAmB5CW,IAAAA,eAAe,EAAE;AACfT,MAAAA,IAAI,EAAEC,mBAAUC,IADD;AAEfJ,MAAAA,SAAS,EAAE,KAFI;AAGfU,MAAAA,KAAK,EAAE,kBAHQ;AAIfE,MAAAA,QAAQ,EAAE,SAJK;AAKfC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,gBADG;AAEVC,QAAAA,GAAG,EAAE,IAFK;AAGVC,QAAAA,EAAE,EAAE;AAHM;AALG;AAnB2B,GAA7B,CAAjB;;AAgCAnB,EAAAA,QAAQ,CAACoB,SAAT,GAAsBC,MAAD,IAAY;AAC/BrB,IAAAA,QAAQ,CAACsB,SAAT,CAAmBD,MAAM,CAACE,aAA1B,EAAyC;AACvCC,MAAAA,UAAU,EAAE,IAD2B;AAEvCT,MAAAA,QAAQ,EAAE;AAF6B,KAAzC;AAIAf,IAAAA,QAAQ,CAACyB,OAAT,CAAiBJ,MAAM,CAACK,MAAxB,EAAgC;AAC9BF,MAAAA,UAAU,EAAE,YADkB;AAE9BL,MAAAA,EAAE,EAAE;AAF0B,KAAhC;AAID,GATD;;AAWA,SAAOnB,QAAP;AACD,CA7CD;;eA+CeH,Q","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport Sequelize from 'sequelize';\r\n\r\n/**\r\n * Question ORM model\r\n * Refers to many Answers\r\n * Belongs to one Questionnaire\r\n * \r\n * @param {Object} sequelize \r\n * @param {Object} DataTypes \r\n */\r\nconst question = (sequelize, DataTypes) => {\r\n  const Question = sequelize.define('question', {\r\n    id: {\r\n      allowNull: false,\r\n      primaryKey: true,\r\n      type: Sequelize.UUID,\r\n      defaultValue: () => uuidv4()\r\n    },\r\n    title: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'title',\r\n      allowNull: false\r\n    },\r\n    question: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'question',\r\n      allowNull: false\r\n    },\r\n    questionnaireId: {\r\n      type: Sequelize.UUID,\r\n      allowNull: false,\r\n      field: 'questionnaire_id',\r\n      onDelete: 'CASCADE',\r\n      references: {\r\n        model: 'questionnaires',\r\n        key: 'id',\r\n        as: 'questionnaireId'\r\n      }\r\n    }\r\n  });\r\n\r\n  Question.associate = (models) => {\r\n    Question.belongsTo(models.Questionnaire, {\r\n      foreignKey: 'id',\r\n      onDelete: 'CASCADE'\r\n    });\r\n    Question.hasMany(models.Answer, {\r\n      foreignKey: 'questionId',\r\n      as: 'answers'\r\n    });\r\n  };\r\n\r\n  return Question;\r\n};\r\n\r\nexport default question;\r\n"],"file":"question.js"}