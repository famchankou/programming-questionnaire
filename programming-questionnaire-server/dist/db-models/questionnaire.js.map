{"version":3,"sources":["../../src/db-models/questionnaire.js"],"names":["questionnaire","sequelize","DataTypes","Questionnaire","define","id","allowNull","primaryKey","type","Sequelize","UUID","defaultValue","title","STRING","description","TEXT","field","unique","args","msg","associate","models","hasMany","Question","foreignKey","as","Progress"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;AAOA,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC9C,QAAMC,aAAa,GAAGF,SAAS,CAACG,MAAV,CAAiB,eAAjB,EAAkC;AACtDC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,UAAU,EAAE,IAFV;AAGFC,MAAAA,IAAI,EAAEC,mBAAUC,IAHd;AAIFC,MAAAA,YAAY,EAAE,MAAM;AAJlB,KADkD;AAOtDC,IAAAA,KAAK,EAAE;AACLJ,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADX;AAELC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFlB;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILV,MAAAA,SAAS,EAAE,KAJN;AAKLW,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AALH,KAP+C;AAiBtDL,IAAAA,WAAW,EAAE;AACXN,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADL;AAEXC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFZ;AAGXC,MAAAA,KAAK,EAAE,aAHI;AAIXV,MAAAA,SAAS,EAAE;AAJA;AAjByC,GAAlC,CAAtB;;AAyBAH,EAAAA,aAAa,CAACiB,SAAd,GAA2BC,MAAD,IAAY;AACpClB,IAAAA,aAAa,CAACmB,OAAd,CAAsBD,MAAM,CAACE,QAA7B,EAAuC;AACrCC,MAAAA,UAAU,EAAE,iBADyB;AAErCC,MAAAA,EAAE,EAAE;AAFiC,KAAvC;AAIAtB,IAAAA,aAAa,CAACmB,OAAd,CAAsBD,MAAM,CAACK,QAA7B,EAAuC;AACrCF,MAAAA,UAAU,EAAE,iBADyB;AAErCC,MAAAA,EAAE,EAAE;AAFiC,KAAvC;AAID,GATD;;AAWA,SAAOtB,aAAP;AACD,CAtCD;;eAwCeH,a","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport Sequelize from 'sequelize';\r\n\r\n/**\r\n * Questionnaire ORM model\r\n * Refers to many Questions/Progresses\r\n * \r\n * @param {Object} sequelize \r\n * @param {Object} DataTypes \r\n */\r\nconst questionnaire = (sequelize, DataTypes) => {\r\n  const Questionnaire = sequelize.define('questionnaire', {\r\n    id: {\r\n      allowNull: false,\r\n      primaryKey: true,\r\n      type: Sequelize.UUID,\r\n      defaultValue: () => uuidv4()\r\n    },\r\n    title: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'title',\r\n      allowNull: false,\r\n      unique: {\r\n        args: true,\r\n        msg: 'Duplicate Questionnaire'\r\n      }\r\n    },\r\n    description: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'description',\r\n      allowNull: true\r\n    }\r\n  });\r\n\r\n  Questionnaire.associate = (models) => {\r\n    Questionnaire.hasMany(models.Question, {\r\n      foreignKey: 'questionnaireId',\r\n      as: 'questions'\r\n    });\r\n    Questionnaire.hasMany(models.Progress, {\r\n      foreignKey: 'questionnaireId',\r\n      as: 'progresses'\r\n    });\r\n  };\r\n\r\n  return Questionnaire;\r\n};\r\n\r\nexport default questionnaire;\r\n"],"file":"questionnaire.js"}