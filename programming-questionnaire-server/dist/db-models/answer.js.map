{"version":3,"sources":["../../src/db-models/answer.js"],"names":["answer","sequelize","DataTypes","Answer","define","id","allowNull","primaryKey","type","Sequelize","UUID","defaultValue","content","STRING","description","TEXT","field","isCorrect","BOOLEAN","questionId","onDelete","references","model","key","as","associate","models","belongsTo","Question","foreignKey","belongsToMany","Progress","through"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;AAOA,MAAMA,MAAM,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACvC,QAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,UAAU,EAAE,IAFV;AAGFC,MAAAA,IAAI,EAAEC,mBAAUC,IAHd;AAIFC,MAAAA,YAAY,EAAE,MAAM;AAJlB,KADoC;AAOxCC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADT;AAEPC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFhB;AAGPC,MAAAA,KAAK,EAAE,SAHA;AAIPV,MAAAA,SAAS,EAAE;AAJJ,KAP+B;AAaxCW,IAAAA,SAAS,EAAE;AACTT,MAAAA,IAAI,EAAEN,SAAS,CAACgB,OADP;AAETF,MAAAA,KAAK,EAAE,YAFE;AAGTV,MAAAA,SAAS,EAAE;AAHF,KAb6B;AAkBxCa,IAAAA,UAAU,EAAE;AACVX,MAAAA,IAAI,EAAEC,mBAAUC,IADN;AAEVM,MAAAA,KAAK,EAAE,aAFG;AAGVI,MAAAA,QAAQ,EAAE,SAHA;AAIVC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,WADG;AAEVC,QAAAA,GAAG,EAAE,IAFK;AAGVC,QAAAA,EAAE,EAAE;AAHM;AAJF;AAlB4B,GAA3B,CAAf;;AA8BArB,EAAAA,MAAM,CAACsB,SAAP,GAAoBC,MAAD,IAAY;AAC7BvB,IAAAA,MAAM,CAACwB,SAAP,CAAiBD,MAAM,CAACE,QAAxB,EAAkC;AAChCC,MAAAA,UAAU,EAAE,IADoB;AAEhCT,MAAAA,QAAQ,EAAE;AAFsB,KAAlC;AAIAjB,IAAAA,MAAM,CAAC2B,aAAP,CAAqBJ,MAAM,CAACK,QAA5B,EAAsC;AACpCC,MAAAA,OAAO,EAAE,kBAD2B;AAEpCR,MAAAA,EAAE,EAAE,YAFgC;AAGpCK,MAAAA,UAAU,EAAE;AAHwB,KAAtC;AAKD,GAVD;;AAYA,SAAO1B,MAAP;AACD,CA5CD;;eA8CeH,M","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport Sequelize from 'sequelize';\r\n\r\n/**\r\n * Answer ORM model\r\n * Belongs to one Question\r\n * \r\n * @param {Object} sequelize \r\n * @param {Object} DataTypes \r\n */\r\nconst answer = (sequelize, DataTypes) => {\r\n  const Answer = sequelize.define('answer', {\r\n    id: {\r\n      allowNull: false,\r\n      primaryKey: true,\r\n      type: Sequelize.UUID,\r\n      defaultValue: () => uuidv4()\r\n    },\r\n    content: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'content',\r\n      allowNull: false\r\n    },\r\n    isCorrect: {\r\n      type: DataTypes.BOOLEAN,\r\n      field: 'is_correct',\r\n      allowNull: false\r\n    },\r\n    questionId: {\r\n      type: Sequelize.UUID,\r\n      field: 'question_id',\r\n      onDelete: 'CASCADE',\r\n      references: {\r\n        model: 'questions',\r\n        key: 'id',\r\n        as: 'questionId'\r\n      }\r\n    }\r\n  });\r\n\r\n  Answer.associate = (models) => {\r\n    Answer.belongsTo(models.Question, {\r\n      foreignKey: 'id',\r\n      onDelete: 'CASCADE'\r\n    });\r\n    Answer.belongsToMany(models.Progress, {\r\n      through: 'progress_answers',\r\n      as: 'progresses',\r\n      foreignKey: 'answer_id'\r\n    });\r\n  };\r\n\r\n  return Answer;\r\n};\r\n\r\nexport default answer;\r\n"],"file":"answer.js"}