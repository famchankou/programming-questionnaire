{"version":3,"sources":["../../src/db-models/user.js"],"names":["user","sequelize","DataTypes","User","define","id","allowNull","primaryKey","type","Sequelize","UUID","defaultValue","username","STRING","description","TEXT","field","unique","args","msg","email","validate","isEmail","password","associate","models","hasMany","Progress","foreignKey","as"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;AAOA,MAAMA,IAAI,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrC,QAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,UAAU,EAAE,IAFV;AAGFC,MAAAA,IAAI,EAAEC,mBAAUC,IAHd;AAIFC,MAAAA,YAAY,EAAE,MAAM;AAJlB,KADgC;AAOpCC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADR;AAERC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFf;AAGRC,MAAAA,KAAK,EAAE,UAHC;AAIRV,MAAAA,SAAS,EAAE,KAJH;AAKRW,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AALA,KAP0B;AAiBpCC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADX;AAELC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFlB;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILV,MAAAA,SAAS,EAAE,KAJN;AAKLe,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD,OALL;AAQLL,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AARH,KAjB6B;AA8BpCI,IAAAA,QAAQ,EAAE;AACRf,MAAAA,IAAI,EAAEN,SAAS,CAACW,MADR;AAERC,MAAAA,WAAW,EAAEZ,SAAS,CAACa,IAFf;AAGRC,MAAAA,KAAK,EAAE,UAHC;AAIRV,MAAAA,SAAS,EAAE;AAJH;AA9B0B,GAAzB,CAAb;;AAsCAH,EAAAA,IAAI,CAACqB,SAAL,GAAkBC,MAAD,IAAY;AAC3BtB,IAAAA,IAAI,CAACuB,OAAL,CAAaD,MAAM,CAACE,QAApB,EAA8B;AAC5BC,MAAAA,UAAU,EAAE,QADgB;AAE5BC,MAAAA,EAAE,EAAE;AAFwB,KAA9B;AAID,GALD;;AAOA,SAAO1B,IAAP;AACD,CA/CD;;eAiDeH,I","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport Sequelize from 'sequelize';\r\n\r\n/**\r\n * User ORM model\r\n * Refers to many Progresses\r\n * \r\n * @param {Object} sequelize \r\n * @param {Object} DataTypes \r\n */\r\nconst user = (sequelize, DataTypes) => {\r\n  const User = sequelize.define('user', {\r\n    id: {\r\n      allowNull: false,\r\n      primaryKey: true,\r\n      type: Sequelize.UUID,\r\n      defaultValue: () => uuidv4()\r\n    },\r\n    username: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'username',\r\n      allowNull: false,\r\n      unique: {\r\n        args: true,\r\n        msg: 'Username already exist'\r\n      }\r\n    },\r\n    email: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'email',\r\n      allowNull: false,\r\n      validate: {\r\n        isEmail: true\r\n      },\r\n      unique: {\r\n        args: true,\r\n        msg: 'Email address already exist'\r\n      }\r\n    },\r\n    password: {\r\n      type: DataTypes.STRING,\r\n      description: DataTypes.TEXT,\r\n      field: 'password',\r\n      allowNull: false\r\n    }\r\n  });\r\n\r\n  User.associate = (models) => {\r\n    User.hasMany(models.Progress, {\r\n      foreignKey: 'userId',\r\n      as: 'progress'\r\n    });\r\n  };\r\n\r\n  return User;\r\n};\r\n\r\nexport default user;\r\n"],"file":"user.js"}